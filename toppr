#!/usr/bin/env perl
# Copyright 2010 Kevin Spencer <kevin@kevinspencer.org>
#
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both that
# copyright notice and this permission notice appear in supporting
# documentation. No representations are made about the suitability of this
# software for any purpose. It is provided "as is" without express or
# implied warranty.
#
################################################################################

use Net::LastFM;
use WWW::Mechanize;
use strict;
use warnings;

my $api_key     = $ENV{LFM_API_KEY} or die "No LFM_API_KEY in env\n";
my $api_secret  = $ENV{LFM_API_SECRET} or die "No LFM_API_SECRET in env\n";
my $lastfm_user = $ENV{LFM_USER} or die "No LFM_USER in env\n";
my $blog_url    = $ENV{BLOG_URL} or die "No BLOG_URL in env\n";
my $blog_id     = $ENV{BLOG_ID} or die "No BLOG_ID in env\n";
my $blog_user   = $ENV{BLOG_USER} or die "No BLOG_USER in env\n";
my $blog_pass   = $ENV{BLOG_PASS} or die "No BLOG_PASS in env\n";
my $post_tags   = 'last.fm, music';
my $lfm_profile = '';

# contact last.fm, obtain past 7 days of play data...
my $lastfm = Net::LastFM->new(
    api_key    => $api_key,
    api_secret => $api_secret
);

my $data = $lastfm->request_signed(
    method => 'user.getTopArtists',
    user   => $lastfm_user,
    period => '7day'
);

my $artists = $data->{topartists}{artist};

# construct the HTML table that will eventually be posted as a blog entry...
my $html = "<table>\n";
my $count = 0;
for my $artist (@$artists) {
    $html .= "<tr>\n";
    my $image    = $artist->{image}[1]{'#text'};
    my $playword = $artist->{playcount} == 1 ? 'play' : 'plays';
    $html .= "<td><img src=\"$image\" width=\"64\" height=\"45\"></td>\n";
    $html .= "<td>$artist->{name}<b> ($artist->{playcount} $playword)</b></td>\n";
    $html .= "</tr>\n";
    $count++;
    last if ($count == 5);
}
$html .= "</table>\n";

my $mech = WWW::Mechanize->new();
my $entry;
$entry->{title} = "Weekly last.fm Top Artists";
$entry->{btext} = "What I've been <a href=\"$lfm_profile\">listening to</a> this week.\n\n";
$entry->{btext} .= $html . "\n\n";
my $toppr_url = 'http://github.com/kevinspencer/toppr';
$entry->{btext} .= "<i>Auto posted by <a href=\"$toppr_url\">toppr</a>.</i>";

# get our MT login cookie...
$mech->get($blog_url);
$mech->field('username',$blog_user);
$mech->field('password',$blog_pass);
$mech->submit();

# retrieve the new entry page...
$mech->get(qq|$blog_url?__mode=view&_type=entry&blog_id=$blog_id|);

# fill out the form fields...
$mech->form_name('entry_form');
$mech->field('title',$entry->{title});
$mech->field('tags',$post_tags);
$mech->field('text',$entry->{btext});
$mech->field('status',2); # publish, or 1 = draft

# submit the blog post, this will block while MT works...
$mech->submit(); 
if (! $mech->success()) {
    die $mech->status(), "\n";
}
